package com.caoping.cloud.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;
import com.caoping.cloud.entiy.Member;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table MEMBER.
*/
public class MemberDao extends AbstractDao<Member, String> {

    public static final String TABLENAME = "MEMBER";

    /**
     * Properties of entity Member.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property EmpId = new Property(0, String.class, "empId", true, "EMP_ID");
        public final static Property Emp_number = new Property(1, String.class, "emp_number", false, "EMP_NUMBER");
        public final static Property EmpMobile = new Property(2, String.class, "empMobile", false, "EMP_MOBILE");
        public final static Property EmpPass = new Property(3, String.class, "empPass", false, "EMP_PASS");
        public final static Property EmpName = new Property(4, String.class, "empName", false, "EMP_NAME");
        public final static Property EmpCover = new Property(5, String.class, "empCover", false, "EMP_COVER");
        public final static Property EmpSex = new Property(6, String.class, "empSex", false, "EMP_SEX");
        public final static Property IsUse = new Property(7, String.class, "isUse", false, "IS_USE");
        public final static Property Dateline = new Property(8, String.class, "dateline", false, "DATELINE");
        public final static Property Emp_birthday = new Property(9, String.class, "emp_birthday", false, "EMP_BIRTHDAY");
        public final static Property HxUsername = new Property(10, String.class, "hxUsername", false, "HX_USERNAME");
        public final static Property IsInGroup = new Property(11, String.class, "isInGroup", false, "IS_IN_GROUP");
        public final static Property PushId = new Property(12, String.class, "pushId", false, "PUSH_ID");
        public final static Property Lat = new Property(13, String.class, "lat", false, "LAT");
        public final static Property Lng = new Property(14, String.class, "lng", false, "LNG");
        public final static Property Level_id = new Property(15, String.class, "level_id", false, "LEVEL_ID");
        public final static Property Emp_erweima = new Property(16, String.class, "emp_erweima", false, "EMP_ERWEIMA");
        public final static Property Emp_up = new Property(17, String.class, "emp_up", false, "EMP_UP");
        public final static Property Emp_up_mobile = new Property(18, String.class, "emp_up_mobile", false, "EMP_UP_MOBILE");
        public final static Property LevelName = new Property(19, String.class, "levelName", false, "LEVEL_NAME");
        public final static Property Jfcount = new Property(20, String.class, "jfcount", false, "JFCOUNT");
        public final static Property Emp_pay_pass = new Property(21, String.class, "emp_pay_pass", false, "EMP_PAY_PASS");
        public final static Property Package_money = new Property(22, String.class, "package_money", false, "PACKAGE_MONEY");
        public final static Property EmpType = new Property(23, String.class, "empType", false, "EMP_TYPE");
        public final static Property Is_card_emp = new Property(24, String.class, "is_card_emp", false, "IS_CARD_EMP");
        public final static Property Lx_attribute_id = new Property(25, String.class, "lx_attribute_id", false, "LX_ATTRIBUTE_ID");
        public final static Property Level_zhe = new Property(26, String.class, "level_zhe", false, "LEVEL_ZHE");
        public final static Property Is_vip_one = new Property(27, String.class, "is_vip_one", false, "IS_VIP_ONE");
        public final static Property Is_vip_two = new Property(28, String.class, "is_vip_two", false, "IS_VIP_TWO");
        public final static Property Is_vip_three = new Property(29, String.class, "is_vip_three", false, "IS_VIP_THREE");
        public final static Property Is_vip_four = new Property(30, String.class, "is_vip_four", false, "IS_VIP_FOUR");
        public final static Property Is_vip_five = new Property(31, String.class, "is_vip_five", false, "IS_VIP_FIVE");
        public final static Property Is_shiming_rz = new Property(32, String.class, "is_shiming_rz", false, "IS_SHIMING_RZ");
        public final static Property Is_qiye_rz = new Property(33, String.class, "is_qiye_rz", false, "IS_QIYE_RZ");
        public final static Property Company_id = new Property(34, String.class, "company_id", false, "COMPANY_ID");
        public final static Property Company_name = new Property(35, String.class, "company_name", false, "COMPANY_NAME");
        public final static Property Company_person = new Property(36, String.class, "company_person", false, "COMPANY_PERSON");
        public final static Property Company_tel = new Property(37, String.class, "company_tel", false, "COMPANY_TEL");
        public final static Property Company_address = new Property(38, String.class, "company_address", false, "COMPANY_ADDRESS");
        public final static Property Lat_company = new Property(39, String.class, "lat_company", false, "LAT_COMPANY");
        public final static Property Lng_company = new Property(40, String.class, "lng_company", false, "LNG_COMPANY");
        public final static Property Company_pic = new Property(41, String.class, "company_pic", false, "COMPANY_PIC");
        public final static Property Is_check = new Property(42, String.class, "is_check", false, "IS_CHECK");
        public final static Property Provinceid = new Property(43, String.class, "provinceid", false, "PROVINCEID");
        public final static Property Cityid = new Property(44, String.class, "cityid", false, "CITYID");
        public final static Property Areaid = new Property(45, String.class, "areaid", false, "AREAID");
        public final static Property Is_gys = new Property(46, String.class, "is_gys", false, "IS_GYS");
        public final static Property Is_fws = new Property(47, String.class, "is_fws", false, "IS_FWS");
    };

    private DaoSession daoSession;


    public MemberDao(DaoConfig config) {
        super(config);
    }
    
    public MemberDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'MEMBER' (" + //
                "'EMP_ID' TEXT PRIMARY KEY NOT NULL ," + // 0: empId
                "'EMP_NUMBER' TEXT," + // 1: emp_number
                "'EMP_MOBILE' TEXT," + // 2: empMobile
                "'EMP_PASS' TEXT," + // 3: empPass
                "'EMP_NAME' TEXT," + // 4: empName
                "'EMP_COVER' TEXT," + // 5: empCover
                "'EMP_SEX' TEXT," + // 6: empSex
                "'IS_USE' TEXT," + // 7: isUse
                "'DATELINE' TEXT," + // 8: dateline
                "'EMP_BIRTHDAY' TEXT," + // 9: emp_birthday
                "'HX_USERNAME' TEXT," + // 10: hxUsername
                "'IS_IN_GROUP' TEXT," + // 11: isInGroup
                "'PUSH_ID' TEXT," + // 12: pushId
                "'LAT' TEXT," + // 13: lat
                "'LNG' TEXT," + // 14: lng
                "'LEVEL_ID' TEXT," + // 15: level_id
                "'EMP_ERWEIMA' TEXT," + // 16: emp_erweima
                "'EMP_UP' TEXT," + // 17: emp_up
                "'EMP_UP_MOBILE' TEXT," + // 18: emp_up_mobile
                "'LEVEL_NAME' TEXT," + // 19: levelName
                "'JFCOUNT' TEXT," + // 20: jfcount
                "'EMP_PAY_PASS' TEXT," + // 21: emp_pay_pass
                "'PACKAGE_MONEY' TEXT," + // 22: package_money
                "'EMP_TYPE' TEXT," + // 23: empType
                "'IS_CARD_EMP' TEXT," + // 24: is_card_emp
                "'LX_ATTRIBUTE_ID' TEXT," + // 25: lx_attribute_id
                "'LEVEL_ZHE' TEXT," + // 26: level_zhe
                "'IS_VIP_ONE' TEXT," + // 27: is_vip_one
                "'IS_VIP_TWO' TEXT," + // 28: is_vip_two
                "'IS_VIP_THREE' TEXT," + // 29: is_vip_three
                "'IS_VIP_FOUR' TEXT," + // 30: is_vip_four
                "'IS_VIP_FIVE' TEXT," + // 31: is_vip_five
                "'IS_SHIMING_RZ' TEXT," + // 32: is_shiming_rz
                "'IS_QIYE_RZ' TEXT," + // 33: is_qiye_rz
                "'COMPANY_ID' TEXT," + // 34: company_id
                "'COMPANY_NAME' TEXT," + // 35: company_name
                "'COMPANY_PERSON' TEXT," + // 36: company_person
                "'COMPANY_TEL' TEXT," + // 37: company_tel
                "'COMPANY_ADDRESS' TEXT," + // 38: company_address
                "'LAT_COMPANY' TEXT," + // 39: lat_company
                "'LNG_COMPANY' TEXT," + // 40: lng_company
                "'COMPANY_PIC' TEXT," + // 41: company_pic
                "'IS_CHECK' TEXT," + // 42: is_check
                "'PROVINCEID' TEXT," + // 43: provinceid
                "'CITYID' TEXT," + // 44: cityid
                "'AREAID' TEXT," + // 45: areaid
                "'IS_GYS' TEXT," + // 46: is_gys
                "'IS_FWS' TEXT);"); // 47: is_fws
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'MEMBER'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Member entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getEmpId());
 
        String emp_number = entity.getEmp_number();
        if (emp_number != null) {
            stmt.bindString(2, emp_number);
        }
 
        String empMobile = entity.getEmpMobile();
        if (empMobile != null) {
            stmt.bindString(3, empMobile);
        }
 
        String empPass = entity.getEmpPass();
        if (empPass != null) {
            stmt.bindString(4, empPass);
        }
 
        String empName = entity.getEmpName();
        if (empName != null) {
            stmt.bindString(5, empName);
        }
 
        String empCover = entity.getEmpCover();
        if (empCover != null) {
            stmt.bindString(6, empCover);
        }
 
        String empSex = entity.getEmpSex();
        if (empSex != null) {
            stmt.bindString(7, empSex);
        }
 
        String isUse = entity.getIsUse();
        if (isUse != null) {
            stmt.bindString(8, isUse);
        }
 
        String dateline = entity.getDateline();
        if (dateline != null) {
            stmt.bindString(9, dateline);
        }
 
        String emp_birthday = entity.getEmp_birthday();
        if (emp_birthday != null) {
            stmt.bindString(10, emp_birthday);
        }
 
        String hxUsername = entity.getHxUsername();
        if (hxUsername != null) {
            stmt.bindString(11, hxUsername);
        }
 
        String isInGroup = entity.getIsInGroup();
        if (isInGroup != null) {
            stmt.bindString(12, isInGroup);
        }
 
        String pushId = entity.getPushId();
        if (pushId != null) {
            stmt.bindString(13, pushId);
        }
 
        String lat = entity.getLat();
        if (lat != null) {
            stmt.bindString(14, lat);
        }
 
        String lng = entity.getLng();
        if (lng != null) {
            stmt.bindString(15, lng);
        }
 
        String level_id = entity.getLevel_id();
        if (level_id != null) {
            stmt.bindString(16, level_id);
        }
 
        String emp_erweima = entity.getEmp_erweima();
        if (emp_erweima != null) {
            stmt.bindString(17, emp_erweima);
        }
 
        String emp_up = entity.getEmp_up();
        if (emp_up != null) {
            stmt.bindString(18, emp_up);
        }
 
        String emp_up_mobile = entity.getEmp_up_mobile();
        if (emp_up_mobile != null) {
            stmt.bindString(19, emp_up_mobile);
        }
 
        String levelName = entity.getLevelName();
        if (levelName != null) {
            stmt.bindString(20, levelName);
        }
 
        String jfcount = entity.getJfcount();
        if (jfcount != null) {
            stmt.bindString(21, jfcount);
        }
 
        String emp_pay_pass = entity.getEmp_pay_pass();
        if (emp_pay_pass != null) {
            stmt.bindString(22, emp_pay_pass);
        }
 
        String package_money = entity.getPackage_money();
        if (package_money != null) {
            stmt.bindString(23, package_money);
        }
 
        String empType = entity.getEmpType();
        if (empType != null) {
            stmt.bindString(24, empType);
        }
 
        String is_card_emp = entity.getIs_card_emp();
        if (is_card_emp != null) {
            stmt.bindString(25, is_card_emp);
        }
 
        String lx_attribute_id = entity.getLx_attribute_id();
        if (lx_attribute_id != null) {
            stmt.bindString(26, lx_attribute_id);
        }
 
        String level_zhe = entity.getLevel_zhe();
        if (level_zhe != null) {
            stmt.bindString(27, level_zhe);
        }
 
        String is_vip_one = entity.getIs_vip_one();
        if (is_vip_one != null) {
            stmt.bindString(28, is_vip_one);
        }
 
        String is_vip_two = entity.getIs_vip_two();
        if (is_vip_two != null) {
            stmt.bindString(29, is_vip_two);
        }
 
        String is_vip_three = entity.getIs_vip_three();
        if (is_vip_three != null) {
            stmt.bindString(30, is_vip_three);
        }
 
        String is_vip_four = entity.getIs_vip_four();
        if (is_vip_four != null) {
            stmt.bindString(31, is_vip_four);
        }
 
        String is_vip_five = entity.getIs_vip_five();
        if (is_vip_five != null) {
            stmt.bindString(32, is_vip_five);
        }
 
        String is_shiming_rz = entity.getIs_shiming_rz();
        if (is_shiming_rz != null) {
            stmt.bindString(33, is_shiming_rz);
        }
 
        String is_qiye_rz = entity.getIs_qiye_rz();
        if (is_qiye_rz != null) {
            stmt.bindString(34, is_qiye_rz);
        }
 
        String company_id = entity.getCompany_id();
        if (company_id != null) {
            stmt.bindString(35, company_id);
        }
 
        String company_name = entity.getCompany_name();
        if (company_name != null) {
            stmt.bindString(36, company_name);
        }
 
        String company_person = entity.getCompany_person();
        if (company_person != null) {
            stmt.bindString(37, company_person);
        }
 
        String company_tel = entity.getCompany_tel();
        if (company_tel != null) {
            stmt.bindString(38, company_tel);
        }
 
        String company_address = entity.getCompany_address();
        if (company_address != null) {
            stmt.bindString(39, company_address);
        }
 
        String lat_company = entity.getLat_company();
        if (lat_company != null) {
            stmt.bindString(40, lat_company);
        }
 
        String lng_company = entity.getLng_company();
        if (lng_company != null) {
            stmt.bindString(41, lng_company);
        }
 
        String company_pic = entity.getCompany_pic();
        if (company_pic != null) {
            stmt.bindString(42, company_pic);
        }
 
        String is_check = entity.getIs_check();
        if (is_check != null) {
            stmt.bindString(43, is_check);
        }
 
        String provinceid = entity.getProvinceid();
        if (provinceid != null) {
            stmt.bindString(44, provinceid);
        }
 
        String cityid = entity.getCityid();
        if (cityid != null) {
            stmt.bindString(45, cityid);
        }
 
        String areaid = entity.getAreaid();
        if (areaid != null) {
            stmt.bindString(46, areaid);
        }
 
        String is_gys = entity.getIs_gys();
        if (is_gys != null) {
            stmt.bindString(47, is_gys);
        }
 
        String is_fws = entity.getIs_fws();
        if (is_fws != null) {
            stmt.bindString(48, is_fws);
        }
    }

    @Override
    protected void attachEntity(Member entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public Member readEntity(Cursor cursor, int offset) {
        Member entity = new Member( //
            cursor.getString(offset + 0), // empId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // emp_number
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // empMobile
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // empPass
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // empName
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // empCover
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // empSex
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // isUse
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // dateline
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // emp_birthday
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // hxUsername
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // isInGroup
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // pushId
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // lat
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // lng
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // level_id
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // emp_erweima
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // emp_up
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // emp_up_mobile
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // levelName
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // jfcount
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // emp_pay_pass
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // package_money
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // empType
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // is_card_emp
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // lx_attribute_id
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // level_zhe
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // is_vip_one
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // is_vip_two
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // is_vip_three
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // is_vip_four
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // is_vip_five
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // is_shiming_rz
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // is_qiye_rz
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // company_id
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // company_name
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // company_person
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // company_tel
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // company_address
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // lat_company
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // lng_company
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // company_pic
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // is_check
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // provinceid
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // cityid
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // areaid
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // is_gys
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47) // is_fws
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Member entity, int offset) {
        entity.setEmpId(cursor.getString(offset + 0));
        entity.setEmp_number(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setEmpMobile(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setEmpPass(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setEmpName(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setEmpCover(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setEmpSex(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setIsUse(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setDateline(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setEmp_birthday(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setHxUsername(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setIsInGroup(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setPushId(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setLat(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setLng(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setLevel_id(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setEmp_erweima(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setEmp_up(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setEmp_up_mobile(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setLevelName(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setJfcount(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setEmp_pay_pass(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setPackage_money(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setEmpType(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setIs_card_emp(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setLx_attribute_id(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setLevel_zhe(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setIs_vip_one(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setIs_vip_two(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setIs_vip_three(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setIs_vip_four(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setIs_vip_five(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setIs_shiming_rz(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setIs_qiye_rz(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setCompany_id(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCompany_name(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setCompany_person(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setCompany_tel(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setCompany_address(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setLat_company(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setLng_company(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setCompany_pic(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setIs_check(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setProvinceid(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setCityid(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setAreaid(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setIs_gys(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setIs_fws(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(Member entity, long rowId) {
        return entity.getEmpId();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(Member entity) {
        if(entity != null) {
            return entity.getEmpId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
